name: Deploy PWA to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

env:
  NODE_VERSION: 20
  # Para GitHub Pages de projeto: https://<user>.github.io/<repo>/
  BASE_PATH: /${{ github.event.repository.name }}/

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          # tirei cache para evitar reuso de tarball com corrupção
          cache: ''

      - name: Hard-reset npm & registry (avoid EINTEGRITY)
        run: |
          set -e
          npm --version
          npm config set registry https://registry.npmjs.org/
          npm config set prefer-online true
          npm config set audit false
          npm config set fund false
          npm config set fetch-retries 5
          npm config set fetch-retry-mintimeout 20000
          npm config set fetch-retry-maxtimeout 120000
          npm cache clean --force
          rm -rf ~/.npm || true

      - name: Install deps (with retries)
        run: |
          set -e
          for i in 1 2 3; do
            if [ -f package-lock.json ]; then
              npm ci && break
            else
              npm install && break
            fi
            echo "Install failed (attempt $i). Cleaning cache and retrying..."
            npm cache clean --force
            sleep 3
          done

      - name: Build (Vite) with correct base
        run: |
          npm run build -- --base=${{ env.BASE_PATH }} || npm run build
          # garantir que manifest/sw/ícones entrem no dist (se estiverem na raiz/public)
          for f in manifest.json sw.js apple-touch-icon.png icon-192x192.png icon-512x512.png; do
            [ -f "$f" ] && cp -f "$f" dist/ || true
            [ -f "public/$f" ] && cp -f "public/$f" dist/ || true
          done

      - name: Patch manifest start_url/scope
        run: |
          if [ -f dist/manifest.json ]; then
            sudo apt-get update -y >/dev/null 2>&1
            sudo apt-get install -y jq >/dev/null 2>&1
            jq --arg base "${BASE_PATH}" '.start_url=$base | .scope=$base' dist/manifest.json > dist/manifest.tmp
            mv dist/manifest.tmp dist/manifest.json
          fi

      - name: SPA fallback (404 -> index)
        run: |
          [ -f dist/index.html ] && cp dist/index.html dist/404.html || true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
