name: Deploy PWA to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

env:
  NODE_VERSION: 20
  BASE_PATH: /${{ github.event.repository.name }}/

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm i
          fi

      # Build do Vite com base sob o subcaminho do GH Pages
      - name: Build
        run: |
          if npm run | grep -q " build"; then
            npm run build -- --base=${{ env.BASE_PATH }} || npm run build
          else
            echo "Sem script build. Gerando dist estÃ¡tico." && mkdir -p dist && cp -r * dist/
          fi

      # Ajusta start_url/scope do manifest para o subcaminho (se existir)
      - name: Patch manifest start_url/scope
        shell: bash
        run: |
          set -e
          sudo apt-get update >/dev/null 2>&1 && sudo apt-get install -y jq >/dev/null 2>&1
          for MANI in dist/manifest.json dist/public/manifest.json; do
            if [ -f "$MANI" ]; then
              jq --arg base "${BASE_PATH}" '.start_url=$base | .scope=$base' "$MANI" > "$MANI.tmp" && mv "$MANI.tmp" "$MANI"
            fi
          done
        continue-on-error: true

      # Fallback de SPA para evitar 404 em rotas client-side
      - name: Add SPA fallback
        shell: bash
        run: |
          if [ -f dist/index.html ]; then
            cp dist/index.html dist/404.html
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
